@using CPSeed;
@model List<recruitments>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<br />
<br />
<br />
<div class="row" style="">
    <div class="col-12">
        <div class="list-form-page">
            <div class="form-input-contact">
                <div class="row">
                    <div class="col-12 col-md-8 col-lg-4 mb-md-3 mb-lg-0">
                        <div class="item-input-contact">
                            <input type="text" id="edit_search" placeholder="Tiêu đề tìm kiếm...">
                        </div>
                    </div>
                    <div class="col-12 col-md-4 col-lg-3 ">
                        @Html.Action("workplace", "Pots")
                    </div>

                    @Html.Action("position", "Pots", new { id = 1 })
                    <div class="col-12 col-md-4 col-lg-2">
                        <div class="btn-search-tt">
                            <a href="javascript:;" id="search" onclick="find_my_div();"> Tìm kiếm</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12">
        <div class="list-item-media">
            <div class="row">

                @{
                    int i = 1;
                    foreach (var item in Model)
                    {

                        <div class="col-12 col-md-6 col-lg-4 mb-4">
                            <div class="item-media" id="user_@i">
                                <div class="top-bar-item">
                                    <p class="number-stt">@i</p>

                                    <div class="label-category">
                                        <p><a href="@Url.Action("recruitmentDetail","Pots", new { Id=item.RecruitmentID})">@item.position</a></p>
                                    </div>
                                </div>
                                <h3 class="title-item-media">
                                    <a style="color: #005b36;" href=""></a>@item.Summary
                                </h3>
                                <div class="list-content-media">
                                    <p class="item-content-media">Số lượng: <span class="color-item-content">@item.Quantity</span></p>
                                    <p class="item-content-media">Hạn nộp HS: <span class="color-item-content">@item.ExpirationDate</span></p>
                                    <p class="item-content-media">Nơi làm việc: <span>@item.workplace</span></p>
                                </div>
                            </div>
                        </div>
                        i++;

                    }
                }
            </div>
        </div>
    </div>
</div>
<script>
    function gid(a_id) {
        return document.getElementById(a_id);
    }

    function close_all() {

        [].forEach.call(document.querySelectorAll('[id^=user_]'), function (div) {
            div.style.display = 'none';
        });

    }
    function find_my_div() {
        close_all();
        var keywords = gid('edit_search').value.trim().toLowerCase().split(/\s+/),
            haystack = document.querySelectorAll('[id^="user_"]'),
            textProp = 'textContent' in document.body ? 'textContent' : 'innerText',
            userWords,
            found = [].filter.call(haystack, function (user) {
                userWords = user[textProp].toLowerCase();
                return keywords.some(function (word) {
                    return userWords.indexOf(word) > -1;
                });
            });
        console.log(found);
        [].forEach.call(found, function (user) {
            user.style.display = 'block';
        });

    }
    function myFunction() {
        close_all();
            var keywords = gid('WorkLocation').value.trim().toLowerCase().split(/\s+/),
            haystack = document.querySelectorAll('[id^="user_"]'),
            textProp = 'textContent' in document.body ? 'textContent' : 'innerText',
            userWords,
            found = [].filter.call(haystack, function (user) {
                userWords = user[textProp].toLowerCase();
                return keywords.some(function (word) {
                    return userWords.indexOf(word) > -1;
                });
            });
        console.log(found);
        [].forEach.call(found, function (user) {
            user.style.display = 'block';
        });
    }
    function Function() {
        close_all();
        var keywords = gid('Career').value.trim().toLowerCase().split(/\s+/),
            haystack = document.querySelectorAll('[id^="user_"]'),
            textProp = 'textContent' in document.body ? 'textContent' : 'innerText',
            userWords,
            found = [].filter.call(haystack, function (user) {
                userWords = user[textProp].toLowerCase();
                return keywords.some(function (word) {
                    return userWords.indexOf(word) > -1;
                });
            });
        console.log(found);
        [].forEach.call(found, function (user) {
            user.style.display = 'block';
        });
    }

</script>